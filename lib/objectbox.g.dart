// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5453298016524400943),
      name: 'TestEntityIndexed',
      lastPropertyId: const obx_int.IdUid(5, 8933220997389638466),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6045856831974807584),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6936912195487802902),
            name: 'tString',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(1, 3627912493679987388)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2740551240924923452),
            name: 'tInt',
            type: 5,
            flags: 8,
            indexId: const obx_int.IdUid(2, 155116997669208311)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5923275911778414554),
            name: 'tLong',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8933220997389638466),
            name: 'tDouble',
            type: 8,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 5087630674825288337),
      name: 'TestEntityPlain',
      lastPropertyId: const obx_int.IdUid(5, 2633769713742296285),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4900264929263122750),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 744298398557394245),
            name: 'tString',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8517120886012576776),
            name: 'tInt',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4690018982222267350),
            name: 'tLong',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2633769713742296285),
            name: 'tDouble',
            type: 8,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 3131756290746376924),
      name: 'RelSourceEntityIndexed',
      lastPropertyId: const obx_int.IdUid(4, 3010204554547165657),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 857073402609537123),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8422124894128951003),
            name: 'tString',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(3, 1267973680746353216)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4831158543554459278),
            name: 'tLong',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3010204554547165657),
            name: 'obxRelTargetId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(4, 1067902231777022849),
            relationTarget: 'RelTargetEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 6999419589241537986),
      name: 'RelSourceEntityPlain',
      lastPropertyId: const obx_int.IdUid(4, 2940873808771910881),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2178707517515063163),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6759259138758744038),
            name: 'tString',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8644747147683565072),
            name: 'tLong',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2940873808771910881),
            name: 'obxRelTargetId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(5, 1393076386577997042),
            relationTarget: 'RelTargetEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 3460633979791451003),
      name: 'RelTargetEntity',
      lastPropertyId: const obx_int.IdUid(2, 8889103133672686790),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8661863255381416471),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8889103133672686790),
            name: 'name',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(6, 1013178598434110616))
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(6, 3460633979791451003),
      lastIndexId: const obx_int.IdUid(6, 1013178598434110616),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [1824294286181366916],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        725236837183566145,
        3060128101942237916,
        3092165041934597703,
        4958684909838795382,
        5062831200094422416
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    TestEntityIndexed: obx_int.EntityDefinition<TestEntityIndexed>(
        model: _entities[0],
        toOneRelations: (TestEntityIndexed object) => [],
        toManyRelations: (TestEntityIndexed object) => {},
        getId: (TestEntityIndexed object) => object.id,
        setId: (TestEntityIndexed object, int id) {
          object.id = id;
        },
        objectToFB: (TestEntityIndexed object, fb.Builder fbb) {
          final tStringOffset = fbb.writeString(object.tString);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tStringOffset);
          fbb.addInt32(2, object.tInt);
          fbb.addInt64(3, object.tLong);
          fbb.addFloat64(4, object.tDouble);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tStringParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final tIntParam =
              const fb.Int32Reader().vTableGet(buffer, rootOffset, 8, 0);
          final tLongParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final tDoubleParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final object = TestEntityIndexed(
              idParam, tStringParam, tIntParam, tLongParam, tDoubleParam);

          return object;
        }),
    TestEntityPlain: obx_int.EntityDefinition<TestEntityPlain>(
        model: _entities[1],
        toOneRelations: (TestEntityPlain object) => [],
        toManyRelations: (TestEntityPlain object) => {},
        getId: (TestEntityPlain object) => object.id,
        setId: (TestEntityPlain object, int id) {
          object.id = id;
        },
        objectToFB: (TestEntityPlain object, fb.Builder fbb) {
          final tStringOffset = fbb.writeString(object.tString);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tStringOffset);
          fbb.addInt32(2, object.tInt);
          fbb.addInt64(3, object.tLong);
          fbb.addFloat64(4, object.tDouble);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tStringParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final tIntParam =
              const fb.Int32Reader().vTableGet(buffer, rootOffset, 8, 0);
          final tLongParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final tDoubleParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final object = TestEntityPlain(
              idParam, tStringParam, tIntParam, tLongParam, tDoubleParam);

          return object;
        }),
    RelSourceEntityIndexed: obx_int.EntityDefinition<RelSourceEntityIndexed>(
        model: _entities[2],
        toOneRelations: (RelSourceEntityIndexed object) =>
            [object.obxRelTarget],
        toManyRelations: (RelSourceEntityIndexed object) => {},
        getId: (RelSourceEntityIndexed object) => object.id,
        setId: (RelSourceEntityIndexed object, int id) {
          object.id = id;
        },
        objectToFB: (RelSourceEntityIndexed object, fb.Builder fbb) {
          final tStringOffset = fbb.writeString(object.tString);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tStringOffset);
          fbb.addInt64(2, object.tLong);
          fbb.addInt64(3, object.obxRelTarget.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tStringParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final tLongParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object =
              RelSourceEntityIndexed(idParam, tStringParam, tLongParam);
          object.obxRelTarget.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.obxRelTarget.attach(store);
          return object;
        }),
    RelSourceEntityPlain: obx_int.EntityDefinition<RelSourceEntityPlain>(
        model: _entities[3],
        toOneRelations: (RelSourceEntityPlain object) => [object.obxRelTarget],
        toManyRelations: (RelSourceEntityPlain object) => {},
        getId: (RelSourceEntityPlain object) => object.id,
        setId: (RelSourceEntityPlain object, int id) {
          object.id = id;
        },
        objectToFB: (RelSourceEntityPlain object, fb.Builder fbb) {
          final tStringOffset = fbb.writeString(object.tString);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, tStringOffset);
          fbb.addInt64(2, object.tLong);
          fbb.addInt64(3, object.obxRelTarget.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final tStringParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final tLongParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final object =
              RelSourceEntityPlain(idParam, tStringParam, tLongParam);
          object.obxRelTarget.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.obxRelTarget.attach(store);
          return object;
        }),
    RelTargetEntity: obx_int.EntityDefinition<RelTargetEntity>(
        model: _entities[4],
        toOneRelations: (RelTargetEntity object) => [],
        toManyRelations: (RelTargetEntity object) => {},
        getId: (RelTargetEntity object) => object.id,
        setId: (RelTargetEntity object, int id) {
          object.id = id;
        },
        objectToFB: (RelTargetEntity object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object = RelTargetEntity(idParam, nameParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [TestEntityIndexed] entity fields to define ObjectBox queries.
class TestEntityIndexed_ {
  /// See [TestEntityIndexed.id].
  static final id =
      obx.QueryIntegerProperty<TestEntityIndexed>(_entities[0].properties[0]);

  /// See [TestEntityIndexed.tString].
  static final tString =
      obx.QueryStringProperty<TestEntityIndexed>(_entities[0].properties[1]);

  /// See [TestEntityIndexed.tInt].
  static final tInt =
      obx.QueryIntegerProperty<TestEntityIndexed>(_entities[0].properties[2]);

  /// See [TestEntityIndexed.tLong].
  static final tLong =
      obx.QueryIntegerProperty<TestEntityIndexed>(_entities[0].properties[3]);

  /// See [TestEntityIndexed.tDouble].
  static final tDouble =
      obx.QueryDoubleProperty<TestEntityIndexed>(_entities[0].properties[4]);
}

/// [TestEntityPlain] entity fields to define ObjectBox queries.
class TestEntityPlain_ {
  /// See [TestEntityPlain.id].
  static final id =
      obx.QueryIntegerProperty<TestEntityPlain>(_entities[1].properties[0]);

  /// See [TestEntityPlain.tString].
  static final tString =
      obx.QueryStringProperty<TestEntityPlain>(_entities[1].properties[1]);

  /// See [TestEntityPlain.tInt].
  static final tInt =
      obx.QueryIntegerProperty<TestEntityPlain>(_entities[1].properties[2]);

  /// See [TestEntityPlain.tLong].
  static final tLong =
      obx.QueryIntegerProperty<TestEntityPlain>(_entities[1].properties[3]);

  /// See [TestEntityPlain.tDouble].
  static final tDouble =
      obx.QueryDoubleProperty<TestEntityPlain>(_entities[1].properties[4]);
}

/// [RelSourceEntityIndexed] entity fields to define ObjectBox queries.
class RelSourceEntityIndexed_ {
  /// See [RelSourceEntityIndexed.id].
  static final id = obx.QueryIntegerProperty<RelSourceEntityIndexed>(
      _entities[2].properties[0]);

  /// See [RelSourceEntityIndexed.tString].
  static final tString = obx.QueryStringProperty<RelSourceEntityIndexed>(
      _entities[2].properties[1]);

  /// See [RelSourceEntityIndexed.tLong].
  static final tLong = obx.QueryIntegerProperty<RelSourceEntityIndexed>(
      _entities[2].properties[2]);

  /// See [RelSourceEntityIndexed.obxRelTarget].
  static final obxRelTarget =
      obx.QueryRelationToOne<RelSourceEntityIndexed, RelTargetEntity>(
          _entities[2].properties[3]);
}

/// [RelSourceEntityPlain] entity fields to define ObjectBox queries.
class RelSourceEntityPlain_ {
  /// See [RelSourceEntityPlain.id].
  static final id = obx.QueryIntegerProperty<RelSourceEntityPlain>(
      _entities[3].properties[0]);

  /// See [RelSourceEntityPlain.tString].
  static final tString =
      obx.QueryStringProperty<RelSourceEntityPlain>(_entities[3].properties[1]);

  /// See [RelSourceEntityPlain.tLong].
  static final tLong = obx.QueryIntegerProperty<RelSourceEntityPlain>(
      _entities[3].properties[2]);

  /// See [RelSourceEntityPlain.obxRelTarget].
  static final obxRelTarget =
      obx.QueryRelationToOne<RelSourceEntityPlain, RelTargetEntity>(
          _entities[3].properties[3]);
}

/// [RelTargetEntity] entity fields to define ObjectBox queries.
class RelTargetEntity_ {
  /// See [RelTargetEntity.id].
  static final id =
      obx.QueryIntegerProperty<RelTargetEntity>(_entities[4].properties[0]);

  /// See [RelTargetEntity.name].
  static final name =
      obx.QueryStringProperty<RelTargetEntity>(_entities[4].properties[1]);
}
